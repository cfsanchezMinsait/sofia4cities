<?xml version="1.0" encoding="UTF-8"?>
<!--
  © Indra Sistemas, S.A.
  2013 - 2014  SPAIN
  
  All rights reserved
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:hz="http://www.hazelcast.com/schema/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.hazelcast.com/schema/spring
        http://www.hazelcast.com/schema/spring/hazelcast-spring-3.1.xsd">

	<hz:hazelcast id="sofiaDataGrid">
	    <hz:config>
	    	<hz:instance-name>SOFIAGRID</hz:instance-name>
	    	<hz:group name="SOFIAGRID" password="${sofia2.grid.password}"/>
	        <hz:network port="${sofia2.grid.port}" port-auto-increment="true">
	            <hz:join>
	            	<hz:multicast enabled="false"/>
	                <hz:tcp-ip enabled="true">
	                    <hz:members>${sofia2.grid.members}</hz:members>
	                </hz:tcp-ip>
	            </hz:join>
	        </hz:network>
			
			<hz:map name="cacheOntologiagrupo"
	        	backup-count="1"
	        	async-backup-count="1"
	        	time-to-live-seconds="0"
	        	max-idle-seconds="0" 
	        	eviction-policy="LRU"
	        	max-size-policy="PER_NODE"
	            max-size="5000"
	            eviction-percentage="25"
	            read-backup-data="true"
	            merge-policy="hz.ADD_NEW_ENTRY"> 
	        		<hz:near-cache
	        			max-size="5000"  
	        			time-to-live-seconds="0" 
	        			max-idle-seconds="60" 
	        			eviction-policy="LRU"
	        			invalidate-on-change="true"/>                
			</hz:map>
			
			<hz:map name="cacheOntologia"
	        	backup-count="1"
	        	async-backup-count="1"
	        	time-to-live-seconds="0"
	        	max-idle-seconds="0" 
	        	eviction-policy="LRU"
	        	max-size-policy="PER_NODE"
	            max-size="5000"
	            eviction-percentage="25"
	            read-backup-data="true"
	            merge-policy="hz.ADD_NEW_ENTRY"> 
	        		<hz:near-cache
	        			max-size="5000"  
	        			time-to-live-seconds="0" 
	        			max-idle-seconds="60" 
	        			eviction-policy="LRU"
	        			invalidate-on-change="true"/>                
			</hz:map>
			
			<hz:map name="cacheScript"
	        	backup-count="1"
	        	async-backup-count="1"
	        	time-to-live-seconds="0"
	        	max-idle-seconds="0" 
	        	eviction-policy="LRU"
	        	max-size-policy="PER_NODE"
	            max-size="5000"
	            eviction-percentage="25"
	            read-backup-data="true"
	            merge-policy="hz.ADD_NEW_ENTRY"> 
	        		<hz:near-cache
	        			max-size="5000"  
	        			time-to-live-seconds="0" 
	        			max-idle-seconds="60" 
	        			eviction-policy="LRU"
	        			invalidate-on-change="true"/>                
			</hz:map>
		         
		    <hz:map name="cacheScriptOntologia"
	        	backup-count="1"
	        	async-backup-count="1"
	        	time-to-live-seconds="0"
	        	max-idle-seconds="0" 
	        	eviction-policy="LRU"
	        	max-size-policy="PER_NODE"
	            max-size="5000"
	            eviction-percentage="25"
	            read-backup-data="true"
	            merge-policy="hz.ADD_NEW_ENTRY"> 
	        		<hz:near-cache
	        			max-size="5000"  
	        			time-to-live-seconds="0" 
	        			max-idle-seconds="60" 
	        			eviction-policy="LRU"
	        			invalidate-on-change="true"/>                
			</hz:map>
		         
		    <hz:map name="cacheKp"
	        	backup-count="1"
	        	async-backup-count="1"
	        	time-to-live-seconds="0"
	        	max-idle-seconds="0" 
	        	eviction-policy="LRU"
	        	max-size-policy="PER_NODE"
	            max-size="5000"
	            eviction-percentage="25"
	            read-backup-data="true"
	            merge-policy="hz.ADD_NEW_ENTRY"> 
	        		<hz:near-cache
	        			max-size="5000"  
	        			time-to-live-seconds="0" 
	        			max-idle-seconds="60" 
	        			eviction-policy="LRU"
	        			invalidate-on-change="true"/>                
			</hz:map>
		         
		    <hz:map name="cacheToken"
	        	backup-count="1"
	        	async-backup-count="1"
	        	time-to-live-seconds="0"
	        	max-idle-seconds="0" 
	        	eviction-policy="LRU"
	        	max-size-policy="PER_NODE"
	            max-size="5000"
	            eviction-percentage="25"
	            read-backup-data="true"
	            merge-policy="hz.ADD_NEW_ENTRY"> 
	        		<hz:near-cache
	        			max-size="5000"  
	        			time-to-live-seconds="0" 
	        			max-idle-seconds="60" 
	        			eviction-policy="LRU"
	        			invalidate-on-change="true"/>                
			</hz:map>
		         
		    <hz:map name="cacheUser"
	        	backup-count="1"
	        	async-backup-count="1"
	        	time-to-live-seconds="0"
	        	max-idle-seconds="0" 
	        	eviction-policy="LRU"
	        	max-size-policy="PER_NODE"
	            max-size="5000"
	            eviction-percentage="25"
	            read-backup-data="true"
	            merge-policy="hz.ADD_NEW_ENTRY"> 
	        		<hz:near-cache
	        			max-size="5000"  
	        			time-to-live-seconds="0" 
	        			max-idle-seconds="60" 
	        			eviction-policy="LRU"
	        			invalidate-on-change="true"/>                
			</hz:map>
		         
		     <hz:map name="cacheInstanciaKp"
	        	backup-count="1"
	        	async-backup-count="1"
	        	time-to-live-seconds="0"
	        	max-idle-seconds="0" 
	        	eviction-policy="LRU"
	        	max-size-policy="PER_NODE"
	            max-size="5000"
	            eviction-percentage="25"
	            read-backup-data="true"
	            merge-policy="hz.ADD_NEW_ENTRY"> 
	        		<hz:near-cache
	        			max-size="5000"  
	        			time-to-live-seconds="0" 
	        			max-idle-seconds="60" 
	        			eviction-policy="LRU"
	        			invalidate-on-change="true"/>                
			</hz:map>
		         
		     <hz:map name="cacheAsset"
	        	backup-count="1"
	        	async-backup-count="1"
	        	time-to-live-seconds="0"
	        	max-idle-seconds="0" 
	        	eviction-policy="LRU"
	        	max-size-policy="PER_NODE"
	            max-size="5000"
	            eviction-percentage="25"
	            read-backup-data="true"
	            merge-policy="hz.ADD_NEW_ENTRY"> 
	        		<hz:near-cache
	        			max-size="5000"  
	        			time-to-live-seconds="0" 
	        			max-idle-seconds="60" 
	        			eviction-policy="LRU"
	        			invalidate-on-change="true"/>                
			</hz:map>
		         
		    <hz:map name="cacheConsultasPredefinidas"
	        	backup-count="1"
	        	async-backup-count="1"
	        	time-to-live-seconds="0"
	        	max-idle-seconds="0" 
	        	eviction-policy="LRU"
	        	max-size-policy="PER_NODE"
	            max-size="5000"
	            eviction-percentage="25"
	            read-backup-data="true"
	            merge-policy="hz.ADD_NEW_ENTRY"> 
	        		<hz:near-cache
	        			max-size="5000"  
	        			time-to-live-seconds="0" 
	        			max-idle-seconds="60" 
	        			eviction-policy="LRU"
	        			invalidate-on-change="true"/>                
			</hz:map>
	
	    </hz:config>
	</hz:hazelcast>

	<!-- Bean que recuperará el objeto topic de cada SIB por nombre -->
	<bean id="sofiaPublishGridHazelcast" class="com.indra.sofia2.grid.publisher.PublishGridHazelcastImpl">
		<constructor-arg index="0" ref="sofiaDataGrid"/>
		<constructor-arg index="1" value="${sofia2.grid.queue.max.items}" />
	</bean>
	<bean id="sofiaPublishGrid" class="com.indra.sofia2.grid.client.plublisher.PublishGridImpl">
		<constructor-arg ref="sofiaPublishGridHazelcast"/>
	</bean>

</beans>
